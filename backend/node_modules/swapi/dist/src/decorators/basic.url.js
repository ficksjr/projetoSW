Object.defineProperty(exports, "__esModule", { value: true });
const storage_1 = require("../storage");
const normalize_path_1 = require("../helpers/normalize.path");
function BaseUrl(path, relatedTo, pathCombiner = null) {
    path = normalize_path_1.normalizePath(path);
    return function (constructor) {
        const node = {
            name: constructor.name,
            path,
            relatedTo: relatedTo ? relatedTo.name : null,
            combiner: pathCombiner,
            isAbstract: false
        };
        const storageInstance = storage_1.NodeStorage.getInstance();
        storageInstance.upsertNode(node);
        const inheritedNodeName = constructor.__proto__.name;
        const inheritedNode = storageInstance.findNodeByName(inheritedNodeName);
        if (!inheritedNode) {
            return;
        }
        inheritedNode.endpoints.forEach((endpoint) => {
            const storedEndpoint = storageInstance.findEndpointByName(node.name, endpoint.name);
            if (storedEndpoint) {
                storageInstance.upsertEndpoint(node.name, endpoint.name, endpoint);
            }
            else {
                storageInstance.addEndpoint(node.name, Object.assign({}, endpoint));
            }
        });
    };
}
exports.BaseUrl = BaseUrl;
//# sourceMappingURL=basic.url.js.map