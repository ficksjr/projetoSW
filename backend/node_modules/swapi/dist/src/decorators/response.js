Object.defineProperty(exports, "__esModule", { value: true });
const storage_1 = require("../storage");
const types_1 = require("../types");
function Response(status, responseType = 'string', isArray = false, description = 'OK') {
    if (isArray === false && responseType.indexOf('[]') === responseType.length - 2) {
        isArray = true;
        responseType = responseType.slice(0, responseType.length - 2);
    }
    return (target, methodName) => {
        const nodeName = target.constructor.name;
        const storage = storage_1.NodeStorage.getInstance();
        const response = {
            status,
            responseType,
            isArray,
            description
        };
        storage.upsertResponse(nodeName, methodName, response.status, response);
    };
}
exports.Response = Response;
function addResponseType(name, scheme, isArray = false) {
    const type = isArray ? types_1.Types.Array : types_1.Types.Object;
    const storage = storage_1.NodeStorage.getInstance();
    storage.createResponseType(name, scheme, type);
    return;
}
exports.addResponseType = addResponseType;
//# sourceMappingURL=response.js.map